pipeline {
    agent any
    environment{
        id='tomcat'
        url1='http://43.204.229.49:8080/'
        path= '/calculator'
        warPath= 'java_app-main/calculator_app/target/calculator.war'
    }
    tools {
        maven 'maven'
    }
    options { 
        buildDiscarder(logRotator(numToKeepStr: '5')) 
    }
    stages {
        stage('checkout') {
            steps {
                script{
                    checkout scmGit(branches: [[name: '*/main']], 
                    extensions: [], 
                    userRemoteConfigs: [[url: 'https://github.com/deeepakdj/calculator_app.git']])
                }
            }
        }
        stage('unit testing'){
            steps{
                sh '''
                    cd ./java_app-main/calculator_app/
                    mvn clean package
                '''
            }
        }
        // stage('Integration Testing'){
        //     steps{
        //         dir('./java_app-main/calculator_app/')
        //         {
        //             sh 'mvn integration-test'
        //         }
        //     }
        // }
        // stage('Load Testing'){
        //     steps{
        //         catchError(buildResult:"FAILURE", stageResult:"SUCCESS"){
        //             sh '''
        //                 cd ./java_app-main/calculator_app/
        //                 mvn clean verify
        //             '''
        //         }
        //     }
        // }
        stage('Deploy'){
            input {
                message "Deploy to production?"
                parameters{
                    booleanParam(name: 'TOGGLE',defaultValue: false, description: 'Toggle this value')
                }
            }
            steps{
                script{
                    echo "$TOGGLE"
                    echo "${params.TOGGLE}"
                    if(TOGGLE.toBoolean()){
                        sh 'ls -lrt'   
                        deploy adapters: [tomcat9(credentialsId:${env.id},url:${env.url1})],
                                        contextPath: ${env.path},
                                        war: ${env.warPath}
                    }
                    else{
                        echo "Skip Deployment"
                    }
                }
            }
        }
    }
}